# variable options
%dev.blog.post.db.host=localhost
%prod.blog.post.db.host=quarkus-blog-post-postgresql
%dev.blog.post.mosquitto.host=localhost
%prod.blog.post.mosquitto.host=quarkus-blog-post-mosquitto

# Database options
quarkus.datasource.db-kind=postgresql
quarkus.datasource.password=postgres
quarkus.datasource.username=postgres
quarkus.datasource.jdbc.url=jdbc:postgresql://${blog.post.db.host}:5432/postgres
quarkus.hibernate-orm.database.generation=drop-and-create
# quarkus.hibernate-orm.log.sql=true
quarkus.hibernate-orm.sql-load-script=initial_db.sql

# openapi options
quarkus.swagger-ui.always-include=true

# Custom options
blog.post.old.posts.hourThreshold = 10

# generator
mp.messaging.outgoing.blog-post-generator.type=smallrye-mqtt
mp.messaging.outgoing.blog-post-generator.topic=blog-posts
mp.messaging.outgoing.blog-post-generator.host=${blog.post.mosquitto.host}
mp.messaging.outgoing.blog-post-generator.port=1883
mp.messaging.outgoing.blog-post-generator.auto-generated-client-id=true


# persister
mp.messaging.incoming.blog-post-persist-service.type=smallrye-mqtt
mp.messaging.incoming.blog-post-persist-service.topic=blog-posts
mp.messaging.incoming.blog-post-persist-service.host=${blog.post.mosquitto.host}
mp.messaging.incoming.blog-post-persist-service.port=1883
mp.messaging.incoming.blog-post-persist-service.auto-generated-client-id=true

# publishers
# http blog posts
mp.messaging.outgoing.http-blog-post-publisher.type=smallrye-mqtt
mp.messaging.outgoing.http-blog-post-publisher.topic=new-blog-posts
mp.messaging.outgoing.http-blog-post-publisher.host=${blog.post.mosquitto.host}
mp.messaging.outgoing.http-blog-post-publisher.port=1883
mp.messaging.outgoing.http-blog-post-publisher.auto-generated-client-id=true

# mqtt blog posts
mp.messaging.outgoing.mqtt-blog-post-publisher.type=smallrye-mqtt
mp.messaging.outgoing.mqtt-blog-post-publisher.topic=new-blog-posts
mp.messaging.outgoing.mqtt-blog-post-publisher.host=${blog.post.mosquitto.host}
mp.messaging.outgoing.mqtt-blog-post-publisher.port=1883
mp.messaging.outgoing.mqtt-blog-post-publisher.auto-generated-client-id=true


# Kubernetes
quarkus.kubernetes.part-of=quarkus-blog-post
quarkus.container-image.registry=
quarkus.container-image.group=
quarkus.container-image.name=quarkus-blog-post
quarkus.container-image.tag=1.0
quarkus.kubernetes.image-pull-policy=never
quarkus.kubernetes.service-type=NodePort